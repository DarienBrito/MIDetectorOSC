TITLE:: MIDetectorOSC guide/overview
summary:: Easy to use classes for sending musical information to other applications via OSC messages.
categories:: Convenience, Musical Information, OSC
related:: Classes/Amplitude, Classes/Pitch, Classes/Tarini, Classes/Onsets, Classes/FFTSubbandPower

DESCRIPTION:: Easy to use classes for sending musical information to other applications via OSC messages. Fill me more



2013 -- Benjamin Sanchez Lengeling

Thanks also to:
Thomas Sanchez Lengeling

EXAMPLES::

CODE::

//Pitch related detectors
(
a=MIDetectorManager.new(net:NetAddr("127.0.0.1",32000));
a.addDetector("Pitch");
a.addDetector("Tartini");
a.addDetector("FTPeak");
)

// VS a simple SineWave
x={
  var freq=MouseX.kr(20,10000).poll(label:"Real freq");
  SinOsc.ar(freq )*0.2
}.play
x.free

// VS a Blip Wave o Buzz with 4 Harmonics
x={
  var freq=MouseX.kr(20,10000).poll(label:"Real freq");
  SinOsc.ar(freq ,4)*0.2
}.play

x.free
// VS a Blip Wave o Buzz with 200 Harmonics
x={
  var freq=MouseX.kr(20,10000).poll(label:"Real freq");
  Blip.ar(freq ,200)*0.2
}.play

x.free

// vs a Bank of frequency resonators
x={ DynKlank.ar(`[[200, 671, 1153, 1723], nil, [1, 1, 1, 1]], PinkNoise.ar([0.007,0.007])) }.play;
x.free

// vs a White Noise
x={ WhiteNoise.ar(0.2) }.play;
x.free

//Volume related detectors
(
a=MIDetectorManager.new(net:NetAddr("127.0.0.1",32000));
a.addDetector("Amp");
a.addDetector("WAmp",[\winSize,0.2]);
a.addDetector("Loud");
a.addDetector("FTPower");
)

//vs a Saw modulated sound
x={
  var amp=LFSaw.ar(0.5, 1).abs.poll(label:"Mod Amp");
  SinOsc.ar(440 )*amp
}.play

x.free
// Vs a slooow chirp
Synth(\kick_chirp,[\fade,10]);
// Vs a fast chirp
Synth(\kick_chirp,[\fade,2]);

//vs Some Impulses
x={Impulse.ar(4)}.play
x.free
//vs Many Impulses
x={Impulse.ar(24)}.play
x.free

//vs random Volume grains
x={Decay2.ar(Dust.ar(4),0.01,0.2,LFNoise2.kr(24).range(0,5))*SinOsc.ar(LFNoise2.kr(2).range(200,8800))*0.2}.play
x.free

//Onset related detectors
(
a=MIDetectorManager.new(net:NetAddr("127.0.0.1",32000));
a.addDetector("Onset");
a.addDetector("Coyote");
a.addDetector("OnsetBand");
a.addDetector("BeatTrack");
)

//Try with different onsets

(
a=MIDetectorManager.new(net:NetAddr("127.0.0.1",32000),in:0,tag:0);
a.addDetector("OnsetBand");
a.addDetector("CoyoteBand");
)

x={  Mix.ar(Decay2.ar(Impulse.ar([1,0.5],[0,0.25]),0.01,[0.25,1])* [Pulse.ar(440),Saw.ar(1300)])}.play;


//Spectral related detectors
(
a=MIDetectorManager.new(net:NetAddr("127.0.0.1",32000));
a.addDetector("FTCrest");
a.addDetector("SpecFlat");
a.addDetector("PowerBands");
//a.addDetector("FlatBands");
)
//Also FTPower, FTPeak

// SpecFlat,FTCrest vs WHiteNoise and SinOsc
x={
  Mix.ar(XFade2.ar(WhiteNoise.ar, SinOsc.ar, MouseX.kr(-1,1)))
}.play;
x.free

x={Nes2.ar(Impulse.kr(3), a0:2r00010111, a2:2r10000000, smask:2r00000001)}.play
x.free

//More complicated info + Plots
( 
a=MIDetectorManager.new(net:NetAddr("127.0.0.1",32000),in:0,tag:0);
a.addDetector("Signal");
a.addDetector("FTMags");
a.addDetector("FTBins"); //send fftbins
)

x={Mix.ar(SinOsc.ar(LFNoise2.kr([2,1,3,5],1,0).range(20,20000)))*0.01}.play;
x.free
::

EXAMPLES::
Check the Processing Examples folder inside of the quarks to check out code to recieve and parse messages, also some visual examples.
